#. extracted from helpcontent2/source/text/sbasic/python
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://bugs.libreoffice.org/enter_bug.cgi?product=LibreOffice&bug_status=UNCONFIRMED&component=UI\n"
"POT-Creation-Date: 2019-07-03 20:22+0200\n"
"PO-Revision-Date: 2019-08-12 08:48+0000\n"
"Last-Translator: Stuart Swales <stuart.swales.croftnuisk@gmail.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: en_GB\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Accelerator-Marker: ~\n"
"X-Generator: Pootle 2.8\n"
"X-POOTLE-MTIME: 1565599713.000000\n"

#: main0000.xhp
msgctxt ""
"main0000.xhp\n"
"tit\n"
"help.text"
msgid "Python Scripts"
msgstr "Python Scripts"

#: main0000.xhp
msgctxt ""
"main0000.xhp\n"
"bm_id491543348147708\n"
"help.text"
msgid "<bookmark_value>macros;Python scripts</bookmark_value>        <bookmark_value>Python;macros</bookmark_value>        <bookmark_value>scripts;Python</bookmark_value>"
msgstr "<bookmark_value>macros;Python scripts</bookmark_value>        <bookmark_value>Python;macros</bookmark_value>        <bookmark_value>scripts;Python</bookmark_value>"

#: main0000.xhp
msgctxt ""
"main0000.xhp\n"
"hd_id3154232\n"
"help.text"
msgid "<variable id=\"pythonscriptshelp\"><link href=\"text/sbasic/python/main0000.xhp\" name=\"mainpython\">%PRODUCTNAME Python Scripts Help</link></variable>"
msgstr "<variable id=\"pythonscriptshelp\"><link href=\"text/sbasic/python/main0000.xhp\" name=\"mainpython\">%PRODUCTNAME Python Scripts Help</link></variable>"

#: main0000.xhp
msgctxt ""
"main0000.xhp\n"
"par_id3153894\n"
"help.text"
msgid "%PRODUCTNAME provides an Application Programming Interface (API) that allows controlling the $[officename] components with different programming languages by using the $[officename] Software Development Kit (SDK). For more information about the $[officename] API and the Software Development Kit, visit <link href=\"https://api.libreoffice.org/\" name=\"api.libreoffice.org\">https://api.libreoffice.org</link>"
msgstr "%PRODUCTNAME provides an Application Programming Interface (API) that allows controlling the $[officename] components with different programming languages by using the $[officename] Software Development Kit (SDK). For more information about the $[officename] API and the Software Development Kit, visit <link href=\"https://api.libreoffice.org/\" name=\"api.libreoffice.org\">https://api.libreoffice.org</link>"

#: main0000.xhp
msgctxt ""
"main0000.xhp\n"
"par_id3147226\n"
"help.text"
msgid "This help section explains the most common Python script functions for %PRODUCTNAME. For more in-depth information please refer to the <link href=\"https://wiki.documentfoundation.org/Macros/Python_Design_Guide\" name=\"wiki.documentfoundation.org PYTHON Guide\">Designing & Developing Python Applications</link> on the Wiki."
msgstr "This help section explains the most common Python script functions for %PRODUCTNAME. For more in-depth information please refer to the <link href=\"https://wiki.documentfoundation.org/Macros/Python_Design_Guide\" name=\"wiki.documentfoundation.org PYTHON Guide\">Designing & Developing Python Applications</link> on the Wiki."

#: main0000.xhp
msgctxt ""
"main0000.xhp\n"
"hd_id3146957\n"
"help.text"
msgid "Working with Python Scripts in %PRODUCTNAME"
msgstr "Working with Python Scripts in %PRODUCTNAME"

#: main0000.xhp
msgctxt ""
"main0000.xhp\n"
"N0102\n"
"help.text"
msgid "You can execute Python scripts choosing <menuitem>Tools - Macros - Run Macro</menuitem>. Editing scripts can be done with your preferred text editor. Python scripts are present in various locations detailed hereafter. You can refer to Programming examples for macros illustrating how to run the Python interactive console from %PRODUCTNAME."
msgstr "You can execute Python scripts choosing <menuitem>Tools - Macros - Run Macro</menuitem>. Editing scripts can be done with your preferred text editor. Python scripts are present in various locations detailed hereafter. You can refer to Programming examples for macros illustrating how to run the Python interactive console from %PRODUCTNAME."

#: python_dialogs.xhp
msgctxt ""
"python_dialogs.xhp\n"
"tit\n"
"help.text"
msgid "Opening a Dialog with Python"
msgstr "Opening a Dialog with Python"

#: python_dialogs.xhp
msgctxt ""
"python_dialogs.xhp\n"
"N0334\n"
"help.text"
msgid "<bookmark_value>Python;dialogs</bookmark_value>        <bookmark_value>dialog box;Python</bookmark_value>        <bookmark_value>dialogs;Python</bookmark_value>"
msgstr "<bookmark_value>Python;dialogs</bookmark_value>        <bookmark_value>dialog box;Python</bookmark_value>        <bookmark_value>dialogs;Python</bookmark_value>"

#: python_dialogs.xhp
msgctxt ""
"python_dialogs.xhp\n"
"N0336\n"
"help.text"
msgid "<variable id=\"pythondialog\"><link href=\"text/sbasic/python/python_dialogs.xhp\" name=\"command_name\">Opening a Dialog with Python</link></variable>"
msgstr "<variable id=\"pythondialog\"><link href=\"text/sbasic/python/python_dialogs.xhp\" name=\"command_name\">Opening a Dialog with Python</link></variable>"

#: python_dialogs.xhp
msgctxt ""
"python_dialogs.xhp\n"
"N0337\n"
"help.text"
msgid "%PRODUCTNAME static dialogs are created with the <link href=\"text/sbasic/guide/create_dialog.xhp\" name=\"dialog editor\">Dialog editor</link> and are stored in varying places according to their personal (My Macros), shared (%PRODUCTNAME Macros) or document-embedded nature. In reverse, dynamic dialogs are constructed at runtime, from Basic or Python scripts, or using any other <link href=\"text/shared/guide/scripting.xhp\">%PRODUCTNAME supported language</link> for that matter. Opening static dialogs with Python is illustrated herewith. Exception handling and internationalization are omitted for clarity."
msgstr "%PRODUCTNAME static dialogs are created with the <link href=\"text/sbasic/guide/create_dialog.xhp\" name=\"dialog editor\">Dialog editor</link> and are stored in varying places according to their personal (My Macros), shared (%PRODUCTNAME Macros) or document-embedded nature. In reverse, dynamic dialogs are constructed at runtime, from Basic or Python scripts, or using any other <link href=\"text/shared/guide/scripting.xhp\">%PRODUCTNAME supported language</link> for that matter. Opening static dialogs with Python is illustrated herewith. Exception handling and internationalization are omitted for clarity."

#: python_dialogs.xhp
msgctxt ""
"python_dialogs.xhp\n"
"N0338\n"
"help.text"
msgid "My Macros or %PRODUCTNAME Macros dialogs"
msgstr "My Macros or %PRODUCTNAME Macros dialogs"

#: python_dialogs.xhp
msgctxt ""
"python_dialogs.xhp\n"
"N0339\n"
"help.text"
msgid "The examples below open <literal>Access2Base Trace</literal> console or the imported <literal>TutorialsDialog</literal> dialog with <menuitem>Tools – Macros – Run Macro...</menuitem> menu:"
msgstr "The examples below open <literal>Access2Base Trace</literal> console or the imported <literal>TutorialsDialog</literal> dialog with <menuitem>Tools – Macros – Run Macro...</menuitem> menu:"

#: python_dialogs.xhp
msgctxt ""
"python_dialogs.xhp\n"
"N0364\n"
"help.text"
msgid "Document embedded dialogs"
msgstr "Document embedded dialogs"

#: python_dialogs.xhp
msgctxt ""
"python_dialogs.xhp\n"
"N0365\n"
"help.text"
msgid "The example below opens a newly edited <literal>Dialog1</literal> dialog from a document with <menuitem>Tools – Macros – Run Macro...</menuitem> menu:"
msgstr "The example below opens a newly edited <literal>Dialog1</literal> dialog from a document with <menuitem>Tools – Macros – Run Macro...</menuitem> menu:"

#: python_dialogs.xhp
msgctxt ""
"python_dialogs.xhp\n"
"N0370\n"
"help.text"
msgid "\"\"\" Display a doc-based dialog \"\"\""
msgstr "\"\"\" Display a doc-based dialog \"\"\""

#: python_dialogs.xhp
msgctxt ""
"python_dialogs.xhp\n"
"N0381\n"
"help.text"
msgid "Refer to <literal>msgbox.py</literal> in <literal>{installation}/program/</literal> directory for Python dynamic dialog examples."
msgstr "Refer to <literal>msgbox.py</literal> in <literal>{installation}/program/</literal> directory for Python dynamic dialog examples."

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"tit\n"
"help.text"
msgid "Python : Monitoring Document Events"
msgstr "Python : Monitoring Document Events"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0526\n"
"help.text"
msgid "<bookmark_value>Basic;Monitoring Document Events</bookmark_value>         <bookmark_value>Python;Monitoring Document Events</bookmark_value>         <bookmark_value>Access2Base;Console</bookmark_value>         <bookmark_value>Access2Base;Trace</bookmark_value>         <bookmark_value>Tools;Strings</bookmark_value>         <bookmark_value>API;BasicLibraries</bookmark_value>         <bookmark_value>API;DocumentEvent</bookmark_value>         <bookmark_value>API;DocumentEventListener</bookmark_value>         <bookmark_value>API;EventObject</bookmark_value>         <bookmark_value>API;GlobalEventBroadcaster</bookmark_value>         <bookmark_value>API;MasterScriptProviderFactory</bookmark_value>         <bookmark_value>API;XDocumentEventBroadcaster</bookmark_value>         <bookmark_value>API;XDocumentEventListener</bookmark_value>         <bookmark_value>API;XScript</bookmark_value>"
msgstr "<bookmark_value>Basic;Monitoring Document Events</bookmark_value>         <bookmark_value>Python;Monitoring Document Events</bookmark_value>         <bookmark_value>Access2Base;Console</bookmark_value>         <bookmark_value>Access2Base;Trace</bookmark_value>         <bookmark_value>Tools;Strings</bookmark_value>         <bookmark_value>API;BasicLibraries</bookmark_value>         <bookmark_value>API;DocumentEvent</bookmark_value>         <bookmark_value>API;DocumentEventListener</bookmark_value>         <bookmark_value>API;EventObject</bookmark_value>         <bookmark_value>API;GlobalEventBroadcaster</bookmark_value>         <bookmark_value>API;MasterScriptProviderFactory</bookmark_value>         <bookmark_value>API;XDocumentEventBroadcaster</bookmark_value>         <bookmark_value>API;XDocumentEventListener</bookmark_value>         <bookmark_value>API;XScript</bookmark_value>"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0527\n"
"help.text"
msgid "<variable id=\"pythonmonitor\"><link href=\"text/sbasic/python/python_document_events.xhp\" name=\"Monitoring Document Events\">Monitoring Document Events</link></variable>"
msgstr "<variable id=\"pythonmonitor\"><link href=\"text/sbasic/python/python_document_events.xhp\" name=\"Monitoring Document Events\">Monitoring Document Events</link></variable>"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0528\n"
"help.text"
msgid "Next to <link href=\"text/sbasic/shared/01040000.xhp\" name=\"assigning macros to events\">assigning macros to events</link>, one can monitor events raised by %PRODUCTNAME documents. Application Programming Interface (API) broadcasters are responsible for calling event scripts. Unlike listeners that require to define all supported methods, even if unused, document monitors require only two methods next to hooked event scripts."
msgstr "Next to <link href=\"text/sbasic/shared/01040000.xhp\" name=\"assigning macros to events\">assigning macros to events</link>, one can monitor events raised by %PRODUCTNAME documents. Application Programming Interface (API) broadcasters are responsible for calling event scripts. Unlike listeners that require to define all supported methods, even if unused, document monitors require only two methods next to hooked event scripts."

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0529\n"
"help.text"
msgid "Listening to Document Events"
msgstr "Listening to Document Events"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0530\n"
"help.text"
msgid "Monitoring is illustrated herewith for Basic and Python languages using object-oriented programming. Assigning <literal>OnLoad</literal> script, to the <literal>Open Document</literal> event, suffices to initiate and terminate document event monitoring. <menuitem>Tools – Customise...</menuitem> menu <menuitem>Events</menuitem> tab is used to assign either scripts."
msgstr "Monitoring is illustrated herewith for Basic and Python languages using object-oriented programming. Assigning <literal>OnLoad</literal> script, to the <literal>Open Document</literal> event, suffices to initiate and terminate document event monitoring. <menuitem>Tools – Customise...</menuitem> menu <menuitem>Events</menuitem> tab is used to assign either scripts."

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0531\n"
"help.text"
msgid "Intercepting events helps setting scripts pre- and post-conditions such as loading and unloading libraries or track script processing in the background. <literal>Access2Base Trace</literal> module usage is illustrating that second context."
msgstr "Intercepting events helps setting scripts pre- and post-conditions such as loading and unloading libraries or track script processing in the background. <literal>Access2Base Trace</literal> module usage is illustrating that second context."

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0532\n"
"help.text"
msgid "With Python"
msgstr "With Python"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0533\n"
"help.text"
msgid "Events monitoring starts from object instantiation and ultimately stops when Python releases the object. Raised events are reported using <literal>Access2Base</literal> console."
msgstr "Events monitoring starts from object instantiation and ultimately stops when Python releases the object. Raised events are reported using <literal>Access2Base</literal> console."

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0534\n"
"help.text"
msgid "<literal>OnLoad</literal> and <literal>OnUnload</literal> events can be used to respectively set and unset Python programs path. They are described as <literal>Open document</literal> and <literal>Document closed</literal>."
msgstr "<literal>OnLoad</literal> and <literal>OnUnload</literal> events can be used to respectively set and unset Python programs path. They are described as <literal>Open document</literal> and <literal>Document closed</literal>."

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0543\n"
"help.text"
msgid "class UiDocument(unohelper.Base, AdapterPattern):"
msgstr "class UiDocument(unohelper.Base, AdapterPattern):"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0544\n"
"help.text"
msgid "\"\"\" Monitor document events \"\"\""
msgstr "\"\"\" Monitor document events \"\"\""

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0546\n"
"help.text"
msgid "adapted from 'Python script to monitor OnSave event' at"
msgstr "adapted from 'Python script to monitor OnSave event' at"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0550\n"
"help.text"
msgid "\"\"\" Document events monitor \"\"\""
msgstr "\"\"\" Document events monitor \"\"\""

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0551\n"
"help.text"
msgid "''' report using Access2Base.Trace console OR"
msgstr "''' report using Access2Base.Trace console OR"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0552\n"
"help.text"
msgid "report in 1st sheet, 1st column for Calc docs '''"
msgstr "report in 1st sheet, 1st column for Calc docs '''"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0558\n"
"help.text"
msgid "#self.row = 0  # uncomment for Calc documents only"
msgstr "#self.row = 0  # uncomment for Calc documents only"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0560\n"
"help.text"
msgid "self.listen()  # Start monitoring doc. events"
msgstr "self.listen()  # Start monitoring doc. events"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0569\n"
"help.text"
msgid "\"\"\" Output doc. events on 1st column of a Calc spreadsheet \"\"\""
msgstr "\"\"\" Output doc. events on 1st column of a Calc spreadsheet \"\"\""

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0575\n"
"help.text"
msgid "def listen(self, *args):  # OnLoad/OnNew at the earliest"
msgstr "def listen(self, *args):  # OnLoad/OnNew at the earliest"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0576\n"
"help.text"
msgid "\"\"\" Start doc. events monitoring \"\"\""
msgstr "\"\"\" Start doc. events monitoring \"\"\""

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0578\n"
"help.text"
msgid "Console.log(\"INFO\", \"Document events are being logged\", True)"
msgstr "Console.log(\"INFO\", \"Document events are being logged\", True)"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0580\n"
"help.text"
msgid "def sleep(self, *args):  # OnUnload at the latest (optional)"
msgstr "def sleep(self, *args):  # OnUnload at the latest (optional)"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0581\n"
"help.text"
msgid "\"\"\" Stop doc. events monitoring \"\"\""
msgstr "\"\"\" Stop doc. events monitoring \"\"\""

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0583\n"
"help.text"
msgid "Console.log(\"INFO\", \"Document events have been logged\", True)"
msgstr "Console.log(\"INFO\", \"Document events have been logged\", True)"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0587\n"
"help.text"
msgid "\"\"\" Intercepts all doc. events \"\"\""
msgstr "\"\"\" Intercepts all doc. events \"\"\""

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0588\n"
"help.text"
msgid "#self.setCell(event.Source, event.EventName) # only for Calc docs"
msgstr "#self.setCell(event.Source, event.EventName) # only for Calc docs"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0595\n"
"help.text"
msgid "\"\"\" Release all activities \"\"\""
msgstr "\"\"\" Release all activities \"\"\""

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0601\n"
"help.text"
msgid "def OnLoad(*args):  # 'Open Document' event"
msgstr "def OnLoad(*args):  # 'Open Document' event"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0604\n"
"help.text"
msgid "def OnUnload(*args):  # 'Document has been closed' event"
msgstr "def OnUnload(*args):  # 'Document has been closed' event"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0605\n"
"help.text"
msgid "pass  # (optional) performed when disposed"
msgstr "pass  # (optional) performed when disposed"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0613\n"
"help.text"
msgid "(Back/Fore)ground console to report/log program execution."
msgstr "(Back/Fore)ground console to report/log program execution."

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0617\n"
"help.text"
msgid "\"\"\" Print free item list to console \"\"\""
msgstr "\"\"\" Print free item list to console \"\"\""

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0622\n"
"help.text"
msgid "\"\"\" Append log message to console, optional user prompt \"\"\""
msgstr "\"\"\" Append log message to console, optional user prompt \"\"\""

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0627\n"
"help.text"
msgid "\"\"\" Set log messages lower limit \"\"\""
msgstr "\"\"\" Set log messages lower limit \"\"\""

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0632\n"
"help.text"
msgid "\"\"\" Display console content/dialog \"\"\""
msgstr "\"\"\" Display console content/dialog \"\"\""

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0647\n"
"help.text"
msgid "Mind the misspelled <literal>documentEventOccured</literal> method that inherits a typo from %PRODUCTNAME Application Programming Interface (API)."
msgstr "Mind the misspelled <literal>documentEventOccured</literal> method that inherits a typo from %PRODUCTNAME Application Programming Interface (API)."

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0648\n"
"help.text"
msgid "<literal>Start application</literal> and <literal>Close application</literal> events can respectively be used to set and to unset Python path for user scripts or %PRODUCTNAME scripts. In a similar fashion, document based Python libraries or modules can be loaded and released using <literal>Open document</literal> and <literal>Document closed</literal> events. Refer to <link href=\"text/sbasic/python/python_import.xhp\" name=\"Importing Python Modules\">Importing Python Modules</link> for more information."
msgstr "<literal>Start application</literal> and <literal>Close application</literal> events can be used respectively to set and to unset Python path for user scripts or %PRODUCTNAME scripts. In a similar fashion, document based Python libraries or modules can be loaded and released using <literal>Open document</literal> and <literal>Document closed</literal> events. Refer to <link href=\"text/sbasic/python/python_import.xhp\" name=\"Importing Python Modules\">Importing Python Modules</link> for more information."

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0649\n"
"help.text"
msgid "With %PRODUCTNAME Basic"
msgstr "With %PRODUCTNAME Basic"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0650\n"
"help.text"
msgid "The <literal>Onload</literal> script is assigned to <literal>Open document</literal> event using <menuitem>Tools – Customise...</menuitem> menu <menuitem>Events</menuitem> tab. Events monitoring starts from the moment a <literal>ConsoleLogger</literal> object is instantiated and ultimately stops when Basic engine releases it. <literal>OnLoad</literal> event loads necessary Basic libraries, while caught events are reported using <literal>Access2Base.Trace</literal> module."
msgstr "The <literal>Onload</literal> script is assigned to <literal>Open document</literal> event using <menuitem>Tools – Customise...</menuitem> menu <menuitem>Events</menuitem> tab. Events monitoring starts from the moment a <literal>ConsoleLogger</literal> object is instantiated and ultimately stops when Basic engine releases it. <literal>OnLoad</literal> event loads necessary Basic libraries, while caught events are reported using <literal>Access2Base.Trace</literal> module."

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0651\n"
"help.text"
msgid "REM controller.Events module"
msgstr "REM controller.Events module"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0653\n"
"help.text"
msgid "Private _obj As Object ' controller.ConsoleLogger instance"
msgstr "Private _obj As Object ' controller.ConsoleLogger instance"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0655\n"
"help.text"
msgid "Sub OnLoad(evt As com.sun.star.document.DocumentEvent) ' >> Open Document <<"
msgstr "Sub OnLoad(evt As com.sun.star.document.DocumentEvent) ' >> Open Document <<"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0659\n"
"help.text"
msgid "REM controller.ConsoleLogger class module"
msgstr "REM controller.ConsoleLogger class module"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0664\n"
"help.text"
msgid "' ADAPTER design pattern object to be instantiated in « Open Document » event"
msgstr "' ADAPTER design pattern object to be instantiated in « Open Document » event"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0668\n"
"help.text"
msgid "' CONSTRUCTOR/DESTRUCTOR"
msgstr "' CONSTRUCTOR/DESTRUCTOR"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0674\n"
"help.text"
msgid "' MEMBERS"
msgstr "' MEMBERS"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0679\n"
"help.text"
msgid "''' System-dependent filename '''"
msgstr "''' System-dependent filename '''"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0686\n"
"help.text"
msgid "' METHODS"
msgstr "' METHODS"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0688\n"
"help.text"
msgid "''' Monitor document events '''"
msgstr "''' Monitor document events '''"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0701\n"
"help.text"
msgid "''' Initialize document events logging '''"
msgstr "''' Initialise document events logging '''"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0706\n"
"help.text"
msgid "IIf(IsMissing(evt),\"\",evt.EventName & \"-\") & \"Document events are being logged\", _"
msgstr "IIf(IsMissing(evt),\"\",evt.EventName & \"-\") & \"Document events are being logged\", _"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0714\n"
"help.text"
msgid "''' Terminate document events logging '''"
msgstr "''' Terminate document events logging '''"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0717\n"
"help.text"
msgid "IIf(IsMissing(evt),\"\",evt.EventName & \"-\") & \"Document events have been logged\", _"
msgstr "IIf(IsMissing(evt),\"\",evt.EventName & \"-\") & \"Document events have been logged\", _"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0723\n"
"help.text"
msgid "' Your code for handled events goes here"
msgstr "' Your code for handled events goes here"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0724\n"
"help.text"
msgid "Mind the misspelled <literal>_documentEventOccured</literal> method that inherits a typo from %PRODUCTNAME Application Programming Interface (API)."
msgstr "Mind the misspelled <literal>_documentEventOccured</literal> method that inherits a typo from %PRODUCTNAME Application Programming Interface (API)."

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0725\n"
"help.text"
msgid "Discovering Documents Events"
msgstr "Discovering Documents Events"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0726\n"
"help.text"
msgid "The broadcaster API object provides the list of events it is responsible for:"
msgstr "The broadcaster API object provides the list of events it is responsible for:"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0727\n"
"help.text"
msgid "With Python"
msgstr "With Python"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0734\n"
"help.text"
msgid "\"\"\" Display document events \"\"\""
msgstr "\"\"\" Display document events \"\"\""

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0736\n"
"help.text"
msgid "adapted from DisplayAvailableEvents() by A. Pitonyak"
msgstr "adapted from DisplayAvailableEvents() by A. Pitonyak"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0747\n"
"help.text"
msgid "The <link href=\"https://extensions.libreoffice.org/extensions/apso-alternative-script-organizer-for-python\" name=\"Alternative Python Script Organizer\">Alternative Python Script Organizer (APSO)</link> extension is used to render events information on screen."
msgstr "The <link href=\"https://extensions.libreoffice.org/extensions/apso-alternative-script-organizer-for-python\" name=\"Alternative Python Script Organizer\">Alternative Python Script Organizer (APSO)</link> extension is used to render events information on screen."

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0748\n"
"help.text"
msgid "With %PRODUCTNAME Basic"
msgstr "With %PRODUCTNAME Basic"

#: python_document_events.xhp
msgctxt ""
"python_document_events.xhp\n"
"N0750\n"
"help.text"
msgid "''' Display document events '''"
msgstr "''' Display document events '''"

#: python_examples.xhp
msgctxt ""
"python_examples.xhp\n"
"tit\n"
"help.text"
msgid "Python examples"
msgstr "Python examples"

#: python_examples.xhp
msgctxt ""
"python_examples.xhp\n"
"bm_id20191031405\n"
"help.text"
msgid "<bookmark_value>Python;examples</bookmark_value>            <bookmark_value>Python;shell</bookmark_value>            <bookmark_value>Python;platform</bookmark_value>            <bookmark_value>Python;session</bookmark_value>            <bookmark_value>Python;screen input/output</bookmark_value>"
msgstr "<bookmark_value>Python;examples</bookmark_value>            <bookmark_value>Python;shell</bookmark_value>            <bookmark_value>Python;platform</bookmark_value>            <bookmark_value>Python;session</bookmark_value>            <bookmark_value>Python;screen input/output</bookmark_value>"

#: python_examples.xhp
msgctxt ""
"python_examples.xhp\n"
"hd_id201901031407\n"
"help.text"
msgid "<variable id=\"pythonexamples2\"><link href=\"text/sbasic/python/python_examples.xhp\" name=\"python examples\">Python programming examples</link></variable>"
msgstr "<variable id=\"pythonexamples2\"><link href=\"text/sbasic/python/python_examples.xhp\" name=\"python examples\">Python programming examples</link></variable>"

#: python_ide.xhp
msgctxt ""
"python_ide.xhp\n"
"tit\n"
"help.text"
msgid "IDE for Python"
msgstr "IDE for Python"

#: python_ide.xhp
msgctxt ""
"python_ide.xhp\n"
"bm_id761543349138561\n"
"help.text"
msgid "<bookmark_value>APSO</bookmark_value>            <bookmark_value>Alternative Python Scripts Organizer</bookmark_value>            <bookmark_value>python;IDE - integrated development environment</bookmark_value>            <bookmark_value>python;editor</bookmark_value>"
msgstr "<bookmark_value>APSO</bookmark_value>            <bookmark_value>Alternative Python Scripts Organiser</bookmark_value>            <bookmark_value>python;IDE - integrated development environment</bookmark_value>            <bookmark_value>python;editor</bookmark_value>"

#: python_ide.xhp
msgctxt ""
"python_ide.xhp\n"
"hd_id151543348965464\n"
"help.text"
msgid "<variable id=\"pythonideh1\"><link href=\"text/sbasic/python/python_ide.xhp\" name=\"Python IDE Setup\">Setting up an Integrated Development Environment (IDE) for Python</link></variable>"
msgstr "<variable id=\"pythonideh1\"><link href=\"text/sbasic/python/python_ide.xhp\" name=\"Python IDE Setup\">Setting up an Integrated Development Environment (IDE) for Python</link></variable>"

#: python_ide.xhp
msgctxt ""
"python_ide.xhp\n"
"par_id541543348965465\n"
"help.text"
msgid "Writing Python macros requires extra configuration steps to set an IDE of choice."
msgstr "Writing Python macros requires extra configuration steps to set an IDE of choice."

#: python_ide.xhp
msgctxt ""
"python_ide.xhp\n"
"N0106\n"
"help.text"
msgid "Unlike Basic language macros development in %PRODUCTNAME, developing Python scripts for %PRODUCTNAME requires to configure an external Integrated Development Environment (IDE). Multiple IDEs are available that range from beginners to advanced Python coders. While using a Python IDE programmers benefit from numerous features such as syntax highlighting, code folding, class browsing, code completion, coding standard enforcement, test driven development, debugging, version control and many more. You can refer to <link href=\"https://wiki.documentfoundation.org/Macros/Python_Design_Guide\" name=\"Designing & Developing Python Applications\">Designing & Developing Python Applications</link> on the Wiki for more in-depth information about the setup of a bridge between your IDE and a running instance %PRODUCTNAME."
msgstr "Unlike Basic language macros development in %PRODUCTNAME, developing Python scripts for %PRODUCTNAME requires to configure an external Integrated Development Environment (IDE). Multiple IDEs are available that range from beginners to advanced Python coders. While using a Python IDE programmers benefit from numerous features such as syntax highlighting, code folding, class browsing, code completion, coding standard enforcement, test driven development, debugging, version control and many more. You can refer to <link href=\"https://wiki.documentfoundation.org/Macros/Python_Design_Guide\" name=\"Designing & Developing Python Applications\">Designing & Developing Python Applications</link> on the Wiki for more in-depth information about the setup of a bridge between your IDE and a running instance %PRODUCTNAME."

#: python_ide.xhp
msgctxt ""
"python_ide.xhp\n"
"hd_id761544698669786\n"
"help.text"
msgid "The APSO Extension"
msgstr "The APSO Extension"

#: python_ide.xhp
msgctxt ""
"python_ide.xhp\n"
"N0104\n"
"help.text"
msgid "The <link href=\"https://extensions.libreoffice.org/extensions/apso-alternative-script-organizer-for-python\" name=\"Alternative Python Script Organizer (APSO)\">Alternative Python Script Organizer (APSO)</link> extension eases the edition of Python scripts, in particular when embedded in a document. Using APSO you can configure your preferred source code editor, start the integrated Python shell and debug Python scripts. Extensions exist that help inspect arbitrary UNO objects, refer to <link href=\"https://wiki.documentfoundation.org/Macros/Python_Design_Guide\" name=\"eDesigning & Developing Python Applications\">Designing & Developing Python Applications</link> for additional details on such extensions."
msgstr "The <link href=\"https://extensions.libreoffice.org/extensions/apso-alternative-script-organizer-for-python\" name=\"Alternative Python Script Organizer (APSO)\">Alternative Python Script Organizer (APSO)</link> extension eases the edition of Python scripts, in particular when embedded in a document. Using APSO you can configure your preferred source code editor, start the integrated Python shell and debug Python scripts. Extensions exist that help inspect arbitrary UNO objects, refer to <link href=\"https://wiki.documentfoundation.org/Macros/Python_Design_Guide\" name=\"eDesigning & Developing Python Applications\">Designing & Developing Python Applications</link> for additional details on such extensions."

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"tit\n"
"help.text"
msgid "Python : Importing Modules"
msgstr "Python : Importing Modules"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0461\n"
"help.text"
msgid "<bookmark_value>Python;import</bookmark_value>        <bookmark_value>Python;Modules</bookmark_value>        <bookmark_value>Python;pythonpath</bookmark_value>        <bookmark_value>PythonLibraries</bookmark_value>"
msgstr "<bookmark_value>Python;import</bookmark_value>        <bookmark_value>Python;Modules</bookmark_value>        <bookmark_value>Python;pythonpath</bookmark_value>        <bookmark_value>PythonLibraries</bookmark_value>"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0462\n"
"help.text"
msgid "<variable id=\"pythonimporth1\"><link href=\"text/sbasic/python/python_import.xhp\" name=\"python imports\">Importing Python Modules</link></variable>"
msgstr "<variable id=\"pythonimporth1\"><link href=\"text/sbasic/python/python_import.xhp\" name=\"python imports\">Importing Python Modules</link></variable>"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0463\n"
"help.text"
msgid "%PRODUCTNAME Python scripts come in three distinct flavors, they can be personal, shared or embedded in documents. They are stored in varying places described in <link href=\"text/sbasic/python/python_locations.xhp\">Python Scripts Organization and Location</link>. In order to import Python modules, their locations must be known from Python at run time."
msgstr "%PRODUCTNAME Python scripts come in three distinct flavours, they can be personal, shared or embedded in documents. They are stored in varying places described in <link href=\"text/sbasic/python/python_locations.xhp\">Python Scripts Organisation and Location</link>. In order to import Python modules, their locations must be known from Python at run time."

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0464\n"
"help.text"
msgid "This mechanism is illustrated for file system based modules and document based modules. Exception handling is omitted for clarity. The terms library or directory, scripts or modules are used interchangeably. A Python macro refers to a function inside a module."
msgstr "This mechanism is illustrated for file system based modules and document based modules. Exception handling is omitted for clarity. The terms library or directory, scripts or modules are used interchangeably. A Python macro refers to a function inside a module."

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0465\n"
"help.text"
msgid "Note that <literal><User Profile>/Scripts/python/pythonpath</literal> local directory is always explored when running a Python macro from <literal><User Profile>/Scripts/python</literal>."
msgstr "Note that <literal><User Profile>/Scripts/python/pythonpath</literal> local directory is always explored when running a Python macro from <literal><User Profile>/Scripts/python</literal>."

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0466\n"
"help.text"
msgid "File System module import"
msgstr "File System module import"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0467\n"
"help.text"
msgid "User or Shared Modules"
msgstr "User or Shared Modules"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0468\n"
"help.text"
msgid "Personal & shared Python scripts can be imported once their directories are included in Python run time path. Refer to <link href=\"text/sbasic/python/python_session.xhp\">Getting session information</link> page for more details regarding omitted Session Class."
msgstr "Personal & shared Python scripts can be imported once their directories are included in Python run-time path. Refer to <link href=\"text/sbasic/python/python_session.xhp\">Getting session information</link> page for more details regarding omitted Session Class."

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0473\n"
"help.text"
msgid "user_lib = Session().UserPythonScripts  # User scripts location"
msgstr "user_lib = Session().UserPythonScripts  # User scripts location"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0475\n"
"help.text"
msgid "sys.path.insert(0, user_lib)  # Add to search path"
msgstr "sys.path.insert(0, user_lib)  # Add to search path"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0476\n"
"help.text"
msgid "import screen_io as ui  # 'screen_io.py' module resides in user_lib directory"
msgstr "import screen_io as ui  # 'screen_io.py' module resides in user_lib directory"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0477\n"
"help.text"
msgid "# Your code follows here"
msgstr "# Your code follows here"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0478\n"
"help.text"
msgid "This Python example exposes a local XSCRIPTCONTEXT variable to an imported module:"
msgstr "This Python example exposes a local XSCRIPTCONTEXT variable to an imported module:"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0483\n"
"help.text"
msgid "share_lib = Session.SharedPythonScripts()  # Shared scripts location"
msgstr "share_lib = Session.SharedPythonScripts()  # Shared scripts location"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0485\n"
"help.text"
msgid "sys.path.insert(0, share_lib)  # Add to search path"
msgstr "sys.path.insert(0, share_lib)  # Add to search path"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0486\n"
"help.text"
msgid "from IDE_utils import ScriptContext  # 'IDE_utils.py' sits with shared Python scripts."
msgstr "from IDE_utils import ScriptContext  # 'IDE_utils.py' sits with shared Python scripts."

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0488\n"
"help.text"
msgid "# Your code follows here"
msgstr "# Your code follows here"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0489\n"
"help.text"
msgid "Installation Modules for Applications"
msgstr "Installation Modules for Applications"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0490\n"
"help.text"
msgid "Unlike personal and shared scripts, %PRODUCTNAME installation scripts can be imported any time. Next to <literal>uno</literal> & <literal>unohelper</literal> %PRODUCTNAME Python modules, other scripts present in <literal><installation_path>/program</literal> directory can be imported directly, such as the <literal>msgbox</literal> module."
msgstr "Unlike personal and shared scripts, %PRODUCTNAME installation scripts can be imported any time. Next to <literal>uno</literal> & <literal>unohelper</literal> %PRODUCTNAME Python modules, other scripts present in <literal><installation_path>/program</literal> directory can be imported directly, such as the <literal>msgbox</literal> module."

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0491\n"
"help.text"
msgid "With Python shell:"
msgstr "With Python shell:"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0534\n"
"help.text"
msgid "Document Module Import"
msgstr "Document Module Import"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0535\n"
"help.text"
msgid "Importing a Python document embedded module is illustrated below. Error handling is not detailed. Python run time path is updated when document has been opened and before closure. Refer to <link href=\"text/sbasic/shared/01040000.xhp\">Event-Driven Macros</link> to learn how to associate Python macros to document events."
msgstr "Importing a Python document embedded module is illustrated below. Error handling is not detailed. Python run-time path is updated when document has been opened and before closure. Refer to <link href=\"text/sbasic/shared/01040000.xhp\">Event-Driven Macros</link> to learn how to associate Python macros to document events."

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0541\n"
"help.text"
msgid "\"\"\" Prepare Python modules import when doc. loaded \"\"\""
msgstr "\"\"\" Prepare Python modules import when doc. loaded \"\"\""

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0542\n"
"help.text"
msgid "PythonLibraries.loadLibrary('lib/subdir')  # Add directory to search path"
msgstr "PythonLibraries.loadLibrary('lib/subdir')  # Add directory to search path"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0543\n"
"help.text"
msgid "PythonLibraries.loadLibrary('my_gui', 'screen_io')  # Add dir. & import screen_io"
msgstr "PythonLibraries.loadLibrary('my_gui', 'screen_io')  # Add dir. & import screen_io"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0546\n"
"help.text"
msgid "\"\"\" Cleanup PYTHON_PATH when doc. Gets closed \"\"\""
msgstr "\"\"\" Cleanup PYTHON_PATH when doc. Gets closed \"\"\""

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0547\n"
"help.text"
msgid "PythonLibraries.unloadLibrary('my_gui')  # Python runtime path cleanup"
msgstr "PythonLibraries.unloadLibrary('my_gui')  # Python runtime path cleanup"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0548\n"
"help.text"
msgid "# Note: imported modules remain loaded in this example.."
msgstr "# Note: imported modules remain loaded in this example.."

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0553\n"
"help.text"
msgid "\"\"\" Python library loader and module importer"
msgstr "\"\"\" Python library loader and module importer"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0555\n"
"help.text"
msgid "adapted from 'Bibliothèque de fonctions' by Hubert Lambert"
msgstr "adapted from 'Bibliothèque de fonctions' by Hubert Lambert"

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0556\n"
"help.text"
msgid "at https://forum.openoffice.org/fr/forum/viewtopic.php?p=286213 \"\"\""
msgstr "at https://forum.openoffice.org/fr/forum/viewtopic.php?p=286213 \"\"\""

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0558\n"
"help.text"
msgid "\"\"\" Check run time module list \"\"\""
msgstr "\"\"\" Check run time module list \"\"\""

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0561\n"
"help.text"
msgid "\"\"\" Check PYTHON_PATH content \"\"\""
msgstr "\"\"\" Check PYTHON_PATH content \"\"\""

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0564\n"
"help.text"
msgid "\"\"\" add directory to PYTHON_PATH, import named module \"\"\""
msgstr "\"\"\" add directory to PYTHON_PATH, import named module \"\"\""

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0573\n"
"help.text"
msgid "\"\"\" remove directory from PYTHON_PATH \"\"\""
msgstr "\"\"\" remove directory from PYTHON_PATH \"\"\""

#: python_import.xhp
msgctxt ""
"python_import.xhp\n"
"N0580\n"
"help.text"
msgid "Refer to <link href=\"text/sbasic/python/python_listener.xhp\">Creating a Python Listener</link> for examples of event-driven macros."
msgstr "Refer to <link href=\"text/sbasic/python/python_listener.xhp\">Creating a Python Listener</link> for examples of event-driven macros."

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"tit\n"
"help.text"
msgid "Python Listeners : Creating Event Listeners"
msgstr "Python Listeners : Creating Event Listeners"

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0385\n"
"help.text"
msgid "<bookmark_value>Python;Event Listener</bookmark_value>         <bookmark_value>Python;createUnoListener</bookmark_value>         <bookmark_value>Basic;Event Listener</bookmark_value>         <bookmark_value>API;ActionEvent</bookmark_value>         <bookmark_value>API;DialogProvider</bookmark_value>         <bookmark_value>API;EventObject</bookmark_value>         <bookmark_value>API;ExecutableDialogResults</bookmark_value>         <bookmark_value>API;XActionListener</bookmark_value>"
msgstr "<bookmark_value>Python;Event Listener</bookmark_value>         <bookmark_value>Python;createUnoListener</bookmark_value>         <bookmark_value>Basic;Event Listener</bookmark_value>         <bookmark_value>API;ActionEvent</bookmark_value>         <bookmark_value>API;DialogProvider</bookmark_value>         <bookmark_value>API;EventObject</bookmark_value>         <bookmark_value>API;ExecutableDialogResults</bookmark_value>         <bookmark_value>API;XActionListener</bookmark_value>"

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0386\n"
"help.text"
msgid "<variable id=\"pythonlistener\"><link href=\"text/sbasic/python/python_listener.xhp\" name=\"python listeners\">Creating Event Listeners</link></variable>"
msgstr "<variable id=\"pythonlistener\"><link href=\"text/sbasic/python/python_listener.xhp\" name=\"python listeners\">Creating Event Listeners</link></variable>"

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0387\n"
"help.text"
msgid "Events raised by dialogs, documents, forms or graphical controls can be linked to macros, which is referred to as event-driven programming. The most common method to relate events to macros are the <literal>Events</literal> tab in <menuitem>Tools – Customize</menuitem> menu and the <link href=\"text/sbasic/guide/create_dialog.xhp\" name=\"Create dialog\">Dialog Editor</link> Control properties pane from <menuitem>Tools - Macros – Organise Dialogs...</menuitem> menu."
msgstr "Events raised by dialogs, documents, forms or graphical controls can be linked to macros, which is referred to as event-driven programming. The most common method to relate events to macros are the <literal>Events</literal> tab in <menuitem>Tools – Customize</menuitem> menu and the <link href=\"text/sbasic/guide/create_dialog.xhp\" name=\"Create dialog\">Dialog Editor</link> Control properties pane from <menuitem>Tools - Macros – Organise Dialogs...</menuitem> menu."

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0388\n"
"help.text"
msgid "Graphical artifacts, keyboard inputs, mouse moves and other man/machine interactions can be controlled using UNO listeners that watch for the user’s behaviour. Listeners are dynamic program code alternatives to macro assignments. One may create as many UNO listeners as events to watch for. A single listener can also handle multiple user interface controls."
msgstr "Graphical artifacts, keyboard inputs, mouse moves and other man/machine interactions can be controlled using UNO listeners that watch for the user’s behaviour. Listeners are dynamic program code alternatives to macro assignments. One may create as many UNO listeners as events to watch for. A single listener can also handle multiple user interface controls."

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0389\n"
"help.text"
msgid "Creating an event listener"
msgstr "Creating an event listener"

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0390\n"
"help.text"
msgid "Listeners get attached to controls held in dialogs, as well as to document or form events. Listeners are also used when creating runtime dialogs or when adding controls to a dialog on the fly."
msgstr "Listeners get attached to controls held in dialogs, as well as to document or form events. Listeners are also used when creating runtime dialogs or when adding controls to a dialog on the fly."

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0391\n"
"help.text"
msgid "This example creates a listener for <literal>Button1</literal> control of <literal>Dialog1</literal> dialog in <literal>Standard</literal> library."
msgstr "This example creates a listener for <literal>Button1</literal> control of <literal>Dialog1</literal> dialog in <literal>Standard</literal> library."

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0392\n"
"help.text"
msgid "With Python"
msgstr "With Python"

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0405\n"
"help.text"
msgid "_MY_LABEL = 'Python listens..'"
msgstr "_MY_LABEL = 'Python listens..'"

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0417\n"
"help.text"
msgid "MsgBox(\"The user acknowledged the dialog.\")"
msgstr "MsgBox(\"The user acknowledged the dialog.\")"

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0419\n"
"help.text"
msgid "MsgBox(\"The user canceled the dialog.\")"
msgstr "MsgBox(\"The user cancelled the dialog.\")"

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0424\n"
"help.text"
msgid "\"\"\" Create a Dialog from its location \"\"\""
msgstr "\"\"\" Create a Dialog from its location \"\"\""

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0437\n"
"help.text"
msgid "\"\"\" Listen to & count button clicks \"\"\""
msgstr "\"\"\" Listen to & count button clicks \"\"\""

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0448\n"
"help.text"
msgid "def disposing(self, evt: EventObject):  # mandatory routine"
msgstr "def disposing(self, evt: EventObject):  # mandatory routine"

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0457\n"
"help.text"
msgid "<emph>msgbox.py</emph> in <emph>{installation}/program/</emph> directory has some examples of button listeners."
msgstr "<emph>msgbox.py</emph> in <emph>{installation}/program/</emph> directory has some examples of button listeners."

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0458\n"
"help.text"
msgid "With %PRODUCTNAME Basic"
msgstr "With %PRODUCTNAME Basic"

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0459d\n"
"help.text"
msgid "Const MY_LABEL = \"Basic listens..\""
msgstr "Const MY_LABEL = \"Basic listens..\""

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0478\n"
"help.text"
msgid "Case rc.OK : MsgBox \"The user acknowledged the dialog.\",, \"Basic\""
msgstr "Case rc.OK : MsgBox \"The user acknowledged the dialog.\",, \"Basic\""

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0479\n"
"help.text"
msgid "Case rc.CANCEL : MsgBox \"The user canceled the dialog.\",, \"Basic\""
msgstr "Case rc.CANCEL : MsgBox \"The user canceled the dialog.\",, \"Basic\""

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0486\n"
"help.text"
msgid "''' Listen to & count button clicks '''"
msgstr "''' Listen to & count button clicks '''"

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0496\n"
"help.text"
msgid "' your code goes here"
msgstr "' your code goes here"

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0498\n"
"help.text"
msgid "Other Event Listeners"
msgstr "Other Event Listeners"

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0499\n"
"help.text"
msgid "Listeners are usually coded along with <link href=\"text/sbasic/python/python_dialogs.xhp\" name=\"dialog opening\">dialog opening</link>. Numerous listener approaches are possible such as event handlers for dialogs or event monitors for documents or forms."
msgstr "Listeners are usually coded along with <link href=\"text/sbasic/python/python_dialogs.xhp\" name=\"dialog opening\">dialog opening</link>. Numerous listener approaches are possible such as event handlers for dialogs or event monitors for documents or forms."

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0505\n"
"help.text"
msgid "<link href=\"text/sbasic/shared/03132000.xhp\" name=\"CreateUnoListener Function\">CreateUnoListener Function</link>"
msgstr "<link href=\"text/sbasic/shared/03132000.xhp\" name=\"CreateUnoListener Function\">CreateUnoListener Function</link>"

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0506\n"
"help.text"
msgid "<link href=\"text/swriter/01/05060700.xhp\" name=\"Events mapping to objects\">Events mapping to objects</link>"
msgstr "<link href=\"text/swriter/01/05060700.xhp\" name=\"Events mapping to objects\">Events mapping to objects</link>"

#: python_listener.xhp
msgctxt ""
"python_listener.xhp\n"
"N0509\n"
"help.text"
msgid "See also <link href=\"text/sbasic/shared/01040000.xhp\" name=\"Document events\">Document events</link>, <link href=\"text/shared/02/01170202.xhp\" name=\"Form events\">Form events</link>."
msgstr "See also <link href=\"text/sbasic/shared/01040000.xhp\" name=\"Document events\">Document events</link>, <link href=\"text/shared/02/01170202.xhp\" name=\"Form events\">Form events</link>."

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"tit\n"
"help.text"
msgid "Python Scripts Organization"
msgstr "Python Scripts Organisation"

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"hd_id391543358231021\n"
"help.text"
msgid "<variable id=\"pythonlocations1\"><link href=\"text/sbasic/python/python_locations.xhp\" name=\"command_name\">Python Scripts Organization and Location</link></variable>"
msgstr "<variable id=\"pythonlocations1\"><link href=\"text/sbasic/python/python_locations.xhp\" name=\"command_name\">Python Scripts Organisation and Location</link></variable>"

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"par_id771543358231022\n"
"help.text"
msgid "The Python script files are stored in the filesystem, in folders controlled by %PRODUCTNAME. The macros can be started at installation, user or file level."
msgstr "The Python script files are stored in the filesystem, in folders controlled by %PRODUCTNAME. The macros can be started at installation, user or file level."

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"hd_id911544049584458\n"
"help.text"
msgid "Python Script Locations"
msgstr "Python Script Locations"

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"par_id121551089455774\n"
"help.text"
msgid "Refer to <link href=\"text/sbasic/python/python_session.xhp\" name=\"Getting Session Information\">Getting Session Information</link> in order to get programmatic access to Python script locations."
msgstr "Refer to <link href=\"text/sbasic/python/python_session.xhp\" name=\"Getting Session Information\">Getting Session Information</link> in order to get programmatic access to Python script locations."

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"hd_id591544049572647\n"
"help.text"
msgid "%PRODUCTNAME Macros container"
msgstr "%PRODUCTNAME Macros container"

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"par_id261544049064421\n"
"help.text"
msgid "Existing macros in this location (container) were copied by the installation program and are available to every computer user, and any open document can access macros stored the container. You need administrative rights to store or edit macros here."
msgstr "Existing macros in this location (container) were copied by the installation program and are available to every computer user, and any open document can access macros stored the container. You need administrative rights to store or edit macros here."

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"par_id861544210028670\n"
"help.text"
msgid "The %PRODUCTNAME  Macros container location in the file system depends on the operating system:"
msgstr "The %PRODUCTNAME  Macros container location in the file system depends on the operating system:"

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"par_id191544210072242\n"
"help.text"
msgid "For <emph>Windows</emph>: <literal>{Installation}\\share\\Scripts\\python</literal>."
msgstr "For <emph>Windows</emph>: <literal>{Installation}\\share\\Scripts\\python</literal>."

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"par_id61544210078654\n"
"help.text"
msgid "For <emph>Linux</emph> and <emph>macOS</emph>: <literal>{Installation}/share/Scripts/python</literal>."
msgstr "For <emph>Linux</emph> and <emph>macOS</emph>: <literal>{Installation}/share/Scripts/python</literal>."

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"hd_id861544049692222\n"
"help.text"
msgid "My Macros"
msgstr "My Macros"

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"par_id981544049055996\n"
"help.text"
msgid "This container is accessible only by the %PRODUCTNAME user. Any open document can access macros stored the container. Macros in this location are stored in the %PRODUCTNAME user profile."
msgstr "This container is accessible only by the %PRODUCTNAME user. Any open document can access macros stored the container. Macros in this location are stored in the %PRODUCTNAME user profile."

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"par_id341544210187846\n"
"help.text"
msgid "The My Macros container location is in the user space and depends on the operating system:"
msgstr "The My Macros container location is in the user space and depends on the operating system:"

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"par_id381544210213190\n"
"help.text"
msgid "For <emph>Windows</emph>,<br/><literal>%APPDATA%\\LibreOffice\\4\\user\\Scripts\\python</literal>."
msgstr "For <emph>Windows</emph>,<br/><literal>%APPDATA%\\LibreOffice\\4\\user\\Scripts\\python</literal>."

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"par_id691544210219850\n"
"help.text"
msgid "For <emph>Linux</emph> and <emph>macOS</emph>,<br/><literal>$HOME/.config/libreoffice/4/user/Scripts/python</literal>."
msgstr "For <emph>Linux</emph> and <emph>macOS</emph>,<br/><literal>$HOME/.config/libreoffice/4/user/Scripts/python</literal>."

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"hd_id101544049707712\n"
"help.text"
msgid "Document macros"
msgstr "Document macros"

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"par_id31544049046497\n"
"help.text"
msgid "Document macros are embedded in the document and are accessible only when the document is open."
msgstr "Document macros are embedded in the document and are accessible only when the document is open."

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"hd_id171544049715310\n"
"help.text"
msgid "Libraries, Modules and Macros"
msgstr "Libraries, Modules and Macros"

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"par_id181544209916707\n"
"help.text"
msgid "Like BASIC macros, Python macros can be organized in libraries, modules and macros."
msgstr "Like BASIC macros, Python macros can be organised in libraries, modules and macros."

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"hd_id21544209865082\n"
"help.text"
msgid "Creating a Python Library"
msgstr "Creating a Python Library"

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"par_id191544209928221\n"
"help.text"
msgid "Libraries are folders in the container tree. To create a library, add a folder in the target container. The library name is the folder name."
msgstr "Libraries are folders in the container tree. To create a library, add a folder in the target container. The library name is the folder name."

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"hd_id31544209872869\n"
"help.text"
msgid "Creating a Python Module."
msgstr "Creating a Python Module."

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"par_id161544209936743\n"
"help.text"
msgid "A module is a python file in the library or the container. Create a module adding a file in the container."
msgstr "A module is a python file in the library or the container. Create a module adding a file in the container."

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"hd_id151544209895574\n"
"help.text"
msgid "Python macros"
msgstr "Python macros"

#: python_locations.xhp
msgctxt ""
"python_locations.xhp\n"
"par_id61544209944591\n"
"help.text"
msgid "A macro is a python object in the module."
msgstr "A macro is a python object in the module."

#: python_platform.xhp
msgctxt ""
"python_platform.xhp\n"
"tit\n"
"help.text"
msgid "Python : Platform class"
msgstr "Python : Platform class"

#: python_platform.xhp
msgctxt ""
"python_platform.xhp\n"
"N0508\n"
"help.text"
msgid "<bookmark_value>Platform;isLinux</bookmark_value>        <bookmark_value>Platform;isMacOsX</bookmark_value>        <bookmark_value>Platform;isWindows</bookmark_value>        <bookmark_value>Platform;ComputerName</bookmark_value>        <bookmark_value>Platform;OSName</bookmark_value>        <bookmark_value>API;ConfigurationAccess</bookmark_value>        <bookmark_value>Tools;GetRegistryContent</bookmark_value>"
msgstr "<bookmark_value>Platform;isLinux</bookmark_value>        <bookmark_value>Platform;isMacOsX</bookmark_value>        <bookmark_value>Platform;isWindows</bookmark_value>        <bookmark_value>Platform;ComputerName</bookmark_value>        <bookmark_value>Platform;OSName</bookmark_value>        <bookmark_value>API;ConfigurationAccess</bookmark_value>        <bookmark_value>Tools;GetRegistryContent</bookmark_value>"

#: python_platform.xhp
msgctxt ""
"python_platform.xhp\n"
"N0509\n"
"help.text"
msgid "<variable id=\"pythonplatform\"><link href=\"text/sbasic/python/python_platform.xhp\" name=\"platform01\">Identifying the operating system</link></variable>"
msgstr "<variable id=\"pythonplatform\"><link href=\"text/sbasic/python/python_platform.xhp\" name=\"platform01\">Identifying the operating system</link></variable>"

#: python_platform.xhp
msgctxt ""
"python_platform.xhp\n"
"N0510\n"
"help.text"
msgid "Identifying the operating system can be performed with Python or Basic language."
msgstr "Identifying the operating system can be performed with Python or Basic language."

#: python_platform.xhp
msgctxt ""
"python_platform.xhp\n"
"N0511\n"
"help.text"
msgid "ComputerName property is solely available for Windows. Basic calls to Python macros help overcome %PRODUCTNAME Basic limitations."
msgstr "ComputerName property is solely available for Windows. Basic calls to Python macros help overcome %PRODUCTNAME Basic limitations."

#: python_platform.xhp
msgctxt ""
"python_platform.xhp\n"
"N0512\n"
"help.text"
msgid "Using a Python class:"
msgstr "Using a Python class:"

#: python_platform.xhp
msgctxt ""
"python_platform.xhp\n"
"N0529\n"
"help.text"
msgid "Using a Basic classmodule:"
msgstr "Using a Basic classmodule:"

#: python_platform.xhp
msgctxt ""
"python_platform.xhp\n"
"NO529b\n"
"help.text"
msgid "%PRODUCTNAME Basic lacks MacOS X native recognition. Platform identification is possible using %PRODUCTNAME Application Programming Interface (API)."
msgstr "%PRODUCTNAME Basic lacks MacOS X native recognition. Platform identification is possible using %PRODUCTNAME Application Programming Interface (API)."

#: python_platform.xhp
msgctxt ""
"python_platform.xhp\n"
"N0451\n"
"help.text"
msgid "' Return platform name as \"MAC\", \"UNIX\", \"WIN\""
msgstr "' Return platform name as \"MAC\", \"UNIX\", \"WIN\""

#: python_platform.xhp
msgctxt ""
"python_platform.xhp\n"
"N0551\n"
"help.text"
msgid "' Inferred from \"Tools.UCB.ShowHelperDialog\" function"
msgstr "' Inferred from \"Tools.UCB.ShowHelperDialog\" function"

#: python_platform.xhp
msgctxt ""
"python_platform.xhp\n"
"N0564\n"
"help.text"
msgid "Examples:"
msgstr "Examples:"

#: python_platform.xhp
msgctxt ""
"python_platform.xhp\n"
"N0565\n"
"help.text"
msgid "With Python"
msgstr "With Python"

#: python_platform.xhp
msgctxt ""
"python_platform.xhp\n"
"N0567\n"
"help.text"
msgid "<literal>>>> print(Platform().isMacOSX)  # object property</literal>"
msgstr "<literal>>>> print(Platform().isMacOSX)  # object property</literal>"

#: python_platform.xhp
msgctxt ""
"python_platform.xhp\n"
"N0569\n"
"help.text"
msgid "<literal>>>> input(Platform().OSName)  # object property</literal>"
msgstr "<literal>>>> input(Platform().OSName)  # object property</literal>"

#: python_platform.xhp
msgctxt ""
"python_platform.xhp\n"
"N0571\n"
"help.text"
msgid "From <menuitem>Tools – Macros - Run Macro...</menuitem> menu."
msgstr "From <menuitem>Tools – Macros - Run Macro...</menuitem> menu."

#: python_platform.xhp
msgctxt ""
"python_platform.xhp\n"
"N0576\n"
"help.text"
msgid "With %PRODUCTNAME Basic"
msgstr "With %PRODUCTNAME Basic"

#: python_platform.xhp
msgctxt ""
"python_platform.xhp\n"
"N0578\n"
"help.text"
msgid "Dim p As New Platform ' instance of Platform class"
msgstr "Dim p As New Platform ' instance of Platform class"

#: python_platform.xhp
msgctxt ""
"python_platform.xhp\n"
"N0579\n"
"help.text"
msgid "MsgBox p.isLinux ' object property"
msgstr "MsgBox p.isLinux ' object property"

#: python_platform.xhp
msgctxt ""
"python_platform.xhp\n"
"N0580\n"
"help.text"
msgid "Print p.isWindows, p.OSName ' object properties"
msgstr "Print p.isWindows, p.OSName ' object properties"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"tit\n"
"help.text"
msgid "Python : Programming with Python"
msgstr "Python : Programming with Python"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0218\n"
"help.text"
msgid "<bookmark_value>Python;Programming</bookmark_value>        <bookmark_value>XSCRIPTCONTEXT;Python</bookmark_value>        <bookmark_value>uno.py</bookmark_value>"
msgstr "<bookmark_value>Python;Programming</bookmark_value>        <bookmark_value>XSCRIPTCONTEXT;Python</bookmark_value>        <bookmark_value>uno.py</bookmark_value>"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"hd_id691546462755220\n"
"help.text"
msgid "<variable id=\"pythonprogrammingheading\"><link href=\"text/sbasic/python/python_programming.xhp\" name=\"python programming\">Programming with Python Scripts</link></variable>"
msgstr "<variable id=\"pythonprogrammingheading\"><link href=\"text/sbasic/python/python_programming.xhp\" name=\"python programming\">Programming with Python Scripts</link></variable>"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0220\n"
"help.text"
msgid "A Python macro is a function within a .py file, identified as a module. Unlike %PRODUCTNAME Basic and its dozen of <link href=\"text/sbasic/shared/uno_objects.xhp\" name=\"UNO objects functions or services\">UNO objects functions or services</link>, Python macros use the <literal>XSCRIPTCONTEXT</literal> UNO single object, shared with JavaScript and BeanShell. The <literal>g_exportedScripts</literal> global tuple explicitly lists selectable macros from a module. Python modules hold autonomous code logic, and are independent from one another."
msgstr "A Python macro is a function within a .py file, identified as a module. Unlike %PRODUCTNAME Basic and its dozen of <link href=\"text/sbasic/shared/uno_objects.xhp\" name=\"UNO objects functions or services\">UNO objects functions or services</link>, Python macros use the <literal>XSCRIPTCONTEXT</literal> UNO single object, shared with JavaScript and BeanShell. The <literal>g_exportedScripts</literal> global tuple explicitly lists selectable macros from a module. Python modules hold autonomous code logic, and are independent from one another."

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0221\n"
"help.text"
msgid "XSCRIPTCONTEXT Global Variable"
msgstr "XSCRIPTCONTEXT Global Variable"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0222\n"
"help.text"
msgid "Genuine Basic UNO facilities can be inferred from <literal>XSCRIPTCONTEXT</literal> global variable. Refer to %PRODUCTNAME API for a complete <link href=\"https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1script_1_1provider_1_1XScriptContext.html\" name=\"description of XSCRIPTCONTEXT\">description of XSCRIPTCONTEXT</link>. <literal>XSCRIPTCONTEXT</literal> methods summarize as:"
msgstr "Genuine Basic UNO facilities can be inferred from <literal>XSCRIPTCONTEXT</literal> global variable. Refer to %PRODUCTNAME API for a complete <link href=\"https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1script_1_1provider_1_1XScriptContext.html\" name=\"description of XSCRIPTCONTEXT\">description of XSCRIPTCONTEXT</link>. <literal>XSCRIPTCONTEXT</literal> methods summarize as:"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0224\n"
"help.text"
msgid "Methods"
msgstr "Methods"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0225\n"
"help.text"
msgid "Description"
msgstr "Description"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0226\n"
"help.text"
msgid "Mapped in Basic as"
msgstr "Mapped in Basic as"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0228\n"
"help.text"
msgid "The document reference on which the script can operate."
msgstr "The document reference on which the script can operate."

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0231\n"
"help.text"
msgid "The desktop reference on which the script can operate."
msgstr "The desktop reference on which the script can operate."

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0234\n"
"help.text"
msgid "The component context which the script can use to create other uno components."
msgstr "The component context which the script can use to create other UNO components."

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0237\n"
"help.text"
msgid "<emph>HelloWorld</emph> and <emph>Capitalise</emph> installation shared scripts illustrate UNO-related macros making use of <literal>XSCRIPTCONTEXT</literal> global variable."
msgstr "<emph>HelloWorld</emph> and <emph>Capitalise</emph> installation shared scripts illustrate UNO-related macros making use of <literal>XSCRIPTCONTEXT</literal> global variable."

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0238\n"
"help.text"
msgid "Python standard output file is not available when running Python macros from <menuitem>Tools - Macros - Run Macro</menuitem> menu. Refer to <emph>Input/Output to Screen</emph> for more information."
msgstr "Python standard output file is not available when running Python macros from <menuitem>Tools - Macros - Run Macro</menuitem> menu. Refer to <emph>Input/Output to Screen</emph> for more information."

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0239\n"
"help.text"
msgid "Module import"
msgstr "Module import"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0240\n"
"help.text"
msgid "<literal>XSCRIPTCONTEXT</literal> is not provided to imported modules."
msgstr "<literal>XSCRIPTCONTEXT</literal> is not provided to imported modules."

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0241\n"
"help.text"
msgid "%PRODUCTNAME Basic libraries contain classes, routines and variables, Python modules contain classes, functions and variables. Common pieces of reusable Python or UNO features must be stored in <link href=\"text/sbasic/python/python_locations.xhp\" name=\"My macros\">My macros</link> within <literal>(User Profile)/Scripts/python/pythonpath</literal>. Python libraries help organize modules in order to prevent module name collisions. Import <literal>uno.py</literal> inside shared modules."
msgstr "%PRODUCTNAME Basic libraries contain classes, routines and variables, Python modules contain classes, functions and variables. Common pieces of reusable Python or UNO features must be stored in <link href=\"text/sbasic/python/python_locations.xhp\" name=\"My macros\">My macros</link> within <literal>(User Profile)/Scripts/python/pythonpath</literal>. Python libraries help organise modules in order to prevent module name collisions. Import <literal>uno.py</literal> inside shared modules."

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0242\n"
"help.text"
msgid "Genuine BASIC UNO facilities can be inferred using <literal>uno.py</literal> module. Use <link href=\"text/sbasic/python/python_shell.xhp\" name=\"Python interactive shell\">Python interactive shell</link> to get a complete module description using <literal>dir()</literal> and <literal>help()</literal> Python commands."
msgstr "Genuine BASIC UNO facilities can be inferred using <literal>uno.py</literal> module. Use <link href=\"text/sbasic/python/python_shell.xhp\" name=\"Python interactive shell\">Python interactive shell</link> to get a complete module description using <literal>dir()</literal> and <literal>help()</literal> Python commands."

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0244\n"
"help.text"
msgid "Functions"
msgstr "Functions"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0245\n"
"help.text"
msgid "Description"
msgstr "Description"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0246\n"
"help.text"
msgid "Mapped in Basic as"
msgstr "Mapped in Basic as"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0248\n"
"help.text"
msgid "Returns an absolute file url from the given urls."
msgstr "Returns an absolute file URL from the given URLs."

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0251\n"
"help.text"
msgid "Creates a UNO struct or exception given by typeName."
msgstr "Creates a UNO struct or exception given by typeName."

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0254\n"
"help.text"
msgid "Returns a system path."
msgstr "Returns a system path."

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0257\n"
"help.text"
msgid "Returns the class of a concrete UNO exception, struct, or interface."
msgstr "Returns the class of a concrete UNO exception, struct, or interface."

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0260\n"
"help.text"
msgid "Returns the UNO component context used to initialize the Python runtime."
msgstr "Returns the UNO component context used to initialise the Python runtime."

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0264\n"
"help.text"
msgid "Looks up the value of an IDL constant by giving its explicit name."
msgstr "Looks up the value of an IDL constant by giving its explicit name."

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0265\n"
"help.text"
msgid "See API constant groups"
msgstr "See API constant groups"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0267\n"
"help.text"
msgid "Returns True, when obj is a class of a UNO interface."
msgstr "Returns True, when obj is a class of a UNO interface."

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0270\n"
"help.text"
msgid "Returns a file URL for the given system path."
msgstr "Returns a file URL for the given system path."

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0272\n"
"help.text"
msgid "<emph>LibreLogo</emph> and <emph>TableSample</emph> installation shared scripts use <literal>uno.py</literal> module."
msgstr "<emph>LibreLogo</emph> and <emph>TableSample</emph> installation shared scripts use <literal>uno.py</literal> module."

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0273\n"
"help.text"
msgid "More Python-Basic samples"
msgstr "More Python-Basic samples"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0275\n"
"help.text"
msgid "Python UNO"
msgstr "Python UNO"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0276\n"
"help.text"
msgid "Basic UNO features"
msgstr "Basic UNO features"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0284\n"
"help.text"
msgid "See <link href=\"text/sbasic/python/python_dialogs.xhp\" name=\"Opening a Dialog\">Opening a Dialog</link>"
msgstr "See <link href=\"text/sbasic/python/python_dialogs.xhp\" name=\"Opening a Dialog\">Opening a Dialog</link>"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0286\n"
"help.text"
msgid "See <link href=\"text/sbasic/python/python_listener.xhp\" name=\"Creating a Listener\">Creating a Listener</link>"
msgstr "See <link href=\"text/sbasic/python/python_listener.xhp\" name=\"Creating a Listener\">Creating a Listener</link>"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0288\n"
"help.text"
msgid "See UNO data types"
msgstr "See UNO data types"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0297\n"
"help.text"
msgid "Importing an embedded Module"
msgstr "Importing an embedded Module"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0298\n"
"help.text"
msgid "Similarly to %PRODUCTNAME Basic that supports browsing and dynamic loading of libraries, Python libraries can be explored and imported on demand. For more information on library containers, visit <link href=\"https://api.libreoffice.org/\" name=\"API Documentation site\">%PRODUCTNAME Application Programming Interface</link> (API) or download <link href=\"https://www.libreoffice.org/download/download/\" name=\"SDK download page\">%PRODUCTNAME Software Development Kit</link> (SDK)."
msgstr "Similarly to %PRODUCTNAME Basic that supports browsing and dynamic loading of libraries, Python libraries can be explored and imported on demand. For more information on library containers, visit <link href=\"https://api.libreoffice.org/\" name=\"API Documentation site\">%PRODUCTNAME Application Programming Interface</link> (API) or download <link href=\"https://www.libreoffice.org/download/download/\" name=\"SDK download page\">%PRODUCTNAME Software Development Kit</link> (SDK)."

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0299\n"
"help.text"
msgid "Importing a Python document embedded module is illustrated below, exception handling is not detailed:"
msgstr "Importing a Python document embedded module is illustrated below, exception handling is not detailed:"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0303\n"
"help.text"
msgid "\"\"\" load library and import module"
msgstr "\"\"\" load library and import module"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0305\n"
"help.text"
msgid "Adapted from 'Bibliothèque de fonctions' by Hubert Lambert"
msgstr "Adapted from 'Bibliothèque de fonctions' by Hubert Lambert"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0306\n"
"help.text"
msgid "at https://forum.openoffice.org/fr/forum/viewtopic.php?p=286213\"\"\""
msgstr "at https://forum.openoffice.org/fr/forum/viewtopic.php?p=286213\"\"\""

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0307\n"
"help.text"
msgid "doc = XSCRIPTCONTEXT.getDocument()  # current document"
msgstr "doc = XSCRIPTCONTEXT.getDocument()  # current document"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0310\n"
"help.text"
msgid "if not url in sys.path:  # add path if necessary"
msgstr "if not url in sys.path:  # add path if necessary"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0311\n"
"help.text"
msgid "sys.path.insert(0, url)  # doclib takes precedence"
msgstr "sys.path.insert(0, url)  # doclib takes precedence"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0312\n"
"help.text"
msgid "if module_name:  # import if requested"
msgstr "if module_name:  # import if requested"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0316\n"
"help.text"
msgid "ui = load_library(\"my_gui\",'screen_io')  # add <lib> path + import <module>"
msgstr "ui = load_library(\"my_gui\",'screen_io')  # add <lib> path + import <module>"

#: python_programming.xhp
msgctxt ""
"python_programming.xhp\n"
"N0321\n"
"help.text"
msgid "<link href=\"text/sbasic/shared/uno_objects.xhp\" name=\"UNO objects page\">Basic UNO Objects, Functions and Services</link>"
msgstr "<link href=\"text/sbasic/shared/uno_objects.xhp\" name=\"UNO objects page\">Basic UNO Objects, Functions and Services</link>"

#: python_screen.xhp
msgctxt ""
"python_screen.xhp\n"
"tit\n"
"help.text"
msgid "Python : Screen Input/Output"
msgstr "Python : Screen Input/Output"

#: python_screen.xhp
msgctxt ""
"python_screen.xhp\n"
"N0433\n"
"help.text"
msgid "<bookmark_value>Python;InputBox</bookmark_value>        <bookmark_value>Python;MsgBox</bookmark_value>        <bookmark_value>Python;Print</bookmark_value>        <bookmark_value>API;MasterScriptProvider</bookmark_value>        <bookmark_value>API;XScript</bookmark_value>"
msgstr "<bookmark_value>Python;InputBox</bookmark_value>        <bookmark_value>Python;MsgBox</bookmark_value>        <bookmark_value>Python;Print</bookmark_value>        <bookmark_value>API;MasterScriptProvider</bookmark_value>        <bookmark_value>API;XScript</bookmark_value>"

#: python_screen.xhp
msgctxt ""
"python_screen.xhp\n"
"N0434\n"
"help.text"
msgid "<variable id=\"ioscreen\"><link href=\"text/sbasic/python/python_screen.xhp\" name=\"IO to screen\">Input/Output to Screen</link></variable>"
msgstr "<variable id=\"ioscreen\"><link href=\"text/sbasic/python/python_screen.xhp\" name=\"IO to screen\">Input/Output to Screen</link></variable>"

#: python_screen.xhp
msgctxt ""
"python_screen.xhp\n"
"N0435\n"
"help.text"
msgid "Python standard output file is not available when running Python macros from <menuitem>Tools – Macros - Run Macro</menuitem>... menu. Presenting the output of a module requires the Python interactive console. Features such as <literal>input()</literal>, <literal>print()</literal>, <literal>repr()</literal> and <literal>str()</literal> are available from the Python shell."
msgstr "Python standard output file is not available when running Python macros from <menuitem>Tools – Macros - Run Macro</menuitem>... menu. Presenting the output of a module requires the Python interactive console. Features such as <literal>input()</literal>, <literal>print()</literal>, <literal>repr()</literal> and <literal>str()</literal> are available from the Python shell."

#: python_screen.xhp
msgctxt ""
"python_screen.xhp\n"
"N0436\n"
"help.text"
msgid "The <link href=\"https://extensions.libreoffice.org/extensions/apso-alternative-script-organizer-for-python\" name=\"apso\">Alternative Python Script Organizer</link> (APSO) extension offers a msgbox() function out of its <literal>apso_utils</literal> module."
msgstr "The <link href=\"https://extensions.libreoffice.org/extensions/apso-alternative-script-organizer-for-python\" name=\"apso\">Alternative Python Script Organizer</link> (APSO) extension offers a msgbox() function out of its <literal>apso_utils</literal> module."

#: python_screen.xhp
msgctxt ""
"python_screen.xhp\n"
"N0437\n"
"help.text"
msgid "%PRODUCTNAME Basic proposes <literal>InputBox()</literal>, <literal>Msgbox()</literal> and <literal>Print()</literal> screen I/O functions. Python alternatives exist relying either on %PRODUCTNAME API Abstract Windowing Toolkit, either on Python to Basic function calls. The latter proposes a syntax that is intentionally close to that of Basic, and uses a Python module next to a Basic module. The API Scripting Framework is used to perform Basic, BeanShell, JavaScript and Python inter-languages function calls."
msgstr "%PRODUCTNAME Basic proposes <literal>InputBox()</literal>, <literal>Msgbox()</literal> and <literal>Print()</literal> screen I/O functions. Python alternatives exist relying either on %PRODUCTNAME API Abstract Windowing Toolkit, either on Python to Basic function calls. The latter proposes a syntax that is intentionally close to that of Basic, and uses a Python module next to a Basic module. The API Scripting Framework is used to perform Basic, BeanShell, JavaScript and Python inter-languages function calls."

#: python_screen.xhp
msgctxt ""
"python_screen.xhp\n"
"N0438\n"
"help.text"
msgid "Python syntax:"
msgstr "Python syntax:"

#: python_screen.xhp
msgctxt ""
"python_screen.xhp\n"
"N0442\n"
"help.text"
msgid "Examples:"
msgstr "Examples:"

#: python_screen.xhp
msgctxt ""
"python_screen.xhp\n"
"N0449\n"
"help.text"
msgid "Installation:"
msgstr "Installation:"

#: python_screen.xhp
msgctxt ""
"python_screen.xhp\n"
"N0450\n"
"help.text"
msgid "Copy <literal>screen_io</literal> Python module in <link href=\"text/sbasic/python/python_locations.xhp\" name=\"User macros\">My macros</link> within <UserProfile>/Scripts/python/pythonpath,"
msgstr "Copy <literal>screen_io</literal> Python module in <link href=\"text/sbasic/python/python_locations.xhp\" name=\"User macros\">My macros</link> within <UserProfile>/Scripts/python/pythonpath,"

#: python_screen.xhp
msgctxt ""
"python_screen.xhp\n"
"N0451\n"
"help.text"
msgid "Copy <literal>uiScripts</literal> Basic module in <link href=\"text/sbasic/python/python_locations.xhp\" name=\"User macros\">My macros</link> Standard Basic library,"
msgstr "Copy <literal>uiScripts</literal> Basic module in <link href=\"text/sbasic/python/python_locations.xhp\" name=\"User macros\">My macros</link> Standard Basic library,"

#: python_screen.xhp
msgctxt ""
"python_screen.xhp\n"
"N0452\n"
"help.text"
msgid "Restart %PRODUCTNAME."
msgstr "Restart %PRODUCTNAME."

#: python_screen.xhp
msgctxt ""
"python_screen.xhp\n"
"N0453\n"
"help.text"
msgid "<literal>screen_io</literal> Python module"
msgstr "<literal>screen_io</literal> Python module"

#: python_screen.xhp
msgctxt ""
"python_screen.xhp\n"
"N0467\n"
"help.text"
msgid "\"\"\" Displays a dialog box containing a message and returns a value.\"\"\""
msgstr "\"\"\" Displays a dialogue box containing a message and returns a value.\"\"\""

#: python_screen.xhp
msgctxt ""
"python_screen.xhp\n"
"N0473\n"
"help.text"
msgid "\"\"\" Displays a prompt in a dialog box at which the user can enter text.\"\"\""
msgstr "\"\"\" Displays a prompt in a dialogue box at which the user can enter text.\"\"\""

#: python_screen.xhp
msgctxt ""
"python_screen.xhp\n"
"N0479\n"
"help.text"
msgid "\"\"\"Outputs the specified strings or numeric expressions in a dialog box.\"\"\""
msgstr "\"\"\"Outputs the specified strings or numeric expressions in a dialogue box.\"\"\""

#: python_screen.xhp
msgctxt ""
"python_screen.xhp\n"
"N0492\n"
"help.text"
msgid "<literal>uiScripts</literal> Basic module"
msgstr "<literal>uiScripts</literal> Basic module"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"tit\n"
"help.text"
msgid "Python_Session : Session class"
msgstr "Python_Session : Session class"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0339\n"
"help.text"
msgid "<bookmark_value>Session;ComputerName</bookmark_value>        <bookmark_value>Session;SharedScripts</bookmark_value>        <bookmark_value>Session;SharedPythonScripts</bookmark_value>        <bookmark_value>Session;UserProfile</bookmark_value>        <bookmark_value>Session;UserScripts</bookmark_value>        <bookmark_value>Session;UserPythonScripts</bookmark_value>        <bookmark_value>API;PathSubstitution</bookmark_value>"
msgstr "<bookmark_value>Session;ComputerName</bookmark_value>        <bookmark_value>Session;SharedScripts</bookmark_value>        <bookmark_value>Session;SharedPythonScripts</bookmark_value>        <bookmark_value>Session;UserProfile</bookmark_value>        <bookmark_value>Session;UserScripts</bookmark_value>        <bookmark_value>Session;UserPythonScripts</bookmark_value>        <bookmark_value>API;PathSubstitution</bookmark_value>"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0340\n"
"help.text"
msgid "<variable id=\"pythonsession\"><link href=\"text/sbasic/python/python_session.xhp\" name=\"session01\">Getting Session Information</link></variable>"
msgstr "<variable id=\"pythonsession\"><link href=\"text/sbasic/python/python_session.xhp\" name=\"session01\">Getting Session Information</link></variable>"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0341\n"
"help.text"
msgid "Computing %PRODUCTNAME user profile and shared modules system file paths can be performed with Python or with Basic languages. BeanShell, Java, JavaScript and Python scripts locations can be derived from this information."
msgstr "Computing %PRODUCTNAME user profile and shared modules system file paths can be performed with Python or with Basic languages. BeanShell, Java, JavaScript and Python scripts locations can be derived from this information."

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0343\n"
"help.text"
msgid "Examples:"
msgstr "Examples:"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0344\n"
"help.text"
msgid "With Python shell."
msgstr "With Python shell."

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0346\n"
"help.text"
msgid "<literal>>>> print(Session.SharedPythonScripts())  # static method</literal>"
msgstr "<literal>>>> print(Session.SharedPythonScripts())  # static method</literal>"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0347\n"
"help.text"
msgid "<literal>>>> print(Session().UserName)  # object property</literal>"
msgstr "<literal>>>> print(Session().UserName)  # object property</literal>"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0348\n"
"help.text"
msgid "<literal>>>> input(Session().UserProfile)  # object property</literal>"
msgstr "<literal>>>> input(Session().UserProfile)  # object property</literal>"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0349\n"
"help.text"
msgid "From <menuitem>Tools – Macros - Run Macro</menuitem>... menu."
msgstr "From <menuitem>Tools – Macros - Run Macro</menuitem>... menu."

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0354\n"
"help.text"
msgid "ui.MsgBox(Session.Share(),title='Installation Share')  # static method"
msgstr "ui.MsgBox(Session.Share(),title='Installation Share')  # static method"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0355\n"
"help.text"
msgid "ui.Print(Session.SharedPythonScripts())  # static method"
msgstr "ui.Print(Session.SharedPythonScripts())  # static method"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0356\n"
"help.text"
msgid "s = Session()  # instance creation"
msgstr "s = Session()  # instance creation"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0357\n"
"help.text"
msgid "ui.MsgBox(s.UserName,title='Hello')  # object property"
msgstr "ui.MsgBox(s.UserName,title='Hello')  # object property"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0358\n"
"help.text"
msgid "ui.Print(s.UserPythonScripts)  # object property"
msgstr "ui.Print(s.UserPythonScripts)  # object property"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0360\n"
"help.text"
msgid "g_exportedScripts = (demo_session,)  # public macros"
msgstr "g_exportedScripts = (demo_session,)  # public macros"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0361\n"
"help.text"
msgid "With %PRODUCTNAME Basic."
msgstr "With %PRODUCTNAME Basic."

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0364\n"
"help.text"
msgid "Print \"Shared scripts location:\", s.SharedScripts"
msgstr "Print \"Shared scripts location:\", s.SharedScripts"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0365\n"
"help.text"
msgid "MsgBox s.UserName,,\"Hello\""
msgstr "MsgBox s.UserName,,\"Hello\""

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0368\n"
"help.text"
msgid "Using COM/OLE and Visual Basic Scripting language."
msgstr "Using COM/OLE and Visual Basic Scripting language."

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0369\n"
"help.text"
msgid "' The service manager is always the entry point"
msgstr "' The service manager is always the entry point"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0370\n"
"help.text"
msgid "' If there is no office running then an office is started up"
msgstr "' If there is no office running then an office is started up"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0372\n"
"help.text"
msgid "' PathSubstitution service exhibits information to infer"
msgstr "' PathSubstitution service exhibits information to infer"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0373\n"
"help.text"
msgid "' <UserProfile|Share>/Scripts/python locations from"
msgstr "' <UserProfile|Share>/Scripts/python locations from"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0381\n"
"help.text"
msgid "Python Session class:"
msgstr "Python Session class:"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0401\n"
"help.text"
msgid "@property  # alternative to '$(username)' variable"
msgstr "@property  # alternative to '$(username)' variable"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0342\n"
"help.text"
msgid "Unlike Basic, pathname normalization is performed with Python inside Session class."
msgstr "Unlike Basic, pathname normalisation is performed with Python inside Session class."

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0412\n"
"help.text"
msgid "%PRODUCTNAME Basic Session class:"
msgstr "%PRODUCTNAME Basic Session class:"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0417\n"
"help.text"
msgid "Private _ps As Object ' Private member"
msgstr "Private _ps As Object ' Private member"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0422\n"
"help.text"
msgid "End Sub ' Constructor"
msgstr "End Sub ' Constructor"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0426\n"
"help.text"
msgid "End Sub ' Destructor"
msgstr "End Sub ' Destructor"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0439\n"
"help.text"
msgid "Public Property Get UserName() As String ' User account name"
msgstr "Public Property Get UserName() As String ' User account name"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0443\n"
"help.text"
msgid "Public Property Get UserProfile() As String ' User profile system path"
msgstr "Public Property Get UserProfile() As String ' User profile system path"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0447\n"
"help.text"
msgid "Public Property Get UserScripts() As String ' User scripts system path"
msgstr "Public Property Get UserScripts() As String ' User scripts system path"

#: python_session.xhp
msgctxt ""
"python_session.xhp\n"
"N0451\n"
"help.text"
msgid "Public Property Get UserPythonScripts() As String ' User Python scripts system path"
msgstr "Public Property Get UserPythonScripts() As String ' User Python scripts system path"

#: python_shell.xhp
msgctxt ""
"python_shell.xhp\n"
"tit\n"
"help.text"
msgid "Python Interactive Shell"
msgstr "Python Interactive Shell"

#: python_shell.xhp
msgctxt ""
"python_shell.xhp\n"
"N0117\n"
"help.text"
msgid "<bookmark_value>Python console</bookmark_value>        <bookmark_value>Python Interactive Shell</bookmark_value>"
msgstr "<bookmark_value>Python console</bookmark_value>        <bookmark_value>Python Interactive Shell</bookmark_value>"

#: python_shell.xhp
msgctxt ""
"python_shell.xhp\n"
"N0118\n"
"help.text"
msgid "<variable id=\"pythonshell1\"><link href=\"text/sbasic/python/python_shell.xhp\" name=\"python shell\">Running Python Interactive Console</link></variable>"
msgstr "<variable id=\"pythonshell1\"><link href=\"text/sbasic/python/python_shell.xhp\" name=\"python shell\">Running Python Interactive Console</link></variable>"

#: python_shell.xhp
msgctxt ""
"python_shell.xhp\n"
"N0119\n"
"help.text"
msgid "The Python interactive console, also known as Python interpreter or Python shell, provides programmers with a quick way to execute commands and try out and test code without creating a file. UNO objects introspection as well as %PRODUCTNAME Python modules documentation can be obtained from the terminal."
msgstr "The Python interactive console, also known as Python interpreter or Python shell, provides programmers with a quick way to execute commands and try out and test code without creating a file. UNO objects introspection as well as %PRODUCTNAME Python modules documentation can be obtained from the terminal."

#: python_shell.xhp
msgctxt ""
"python_shell.xhp\n"
"N0121\n"
"help.text"
msgid "Using a Basic macro:"
msgstr "Using a Basic macro:"

#: python_shell.xhp
msgctxt ""
"python_shell.xhp\n"
"N0127\n"
"help.text"
msgid "Using a Python macro:"
msgstr "Using a Python macro:"

#: python_shell.xhp
msgctxt ""
"python_shell.xhp\n"
"N0141\n"
"help.text"
msgid "Usage:"
msgstr "Usage:"

#: python_shell.xhp
msgctxt ""
"python_shell.xhp\n"
"N0142\n"
"help.text"
msgid "<image src=\"media/helpimg/python/python_shell.png\" id=\"N0143\"><alt id=\"N0144\">Python Interactive Console</alt></image>"
msgstr "<image src=\"media/helpimg/python/python_shell.png\" id=\"N0143\"><alt id=\"N0144\">Python Interactive Console</alt></image>"
